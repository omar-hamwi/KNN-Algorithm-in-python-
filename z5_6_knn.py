# -*- coding: utf-8 -*-
"""Z5_6_knn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18S9mF6ChBd9hcO6ag4hHH5ns9Ch72GRM
"""

pip install pandas

pip install numpy

pip install sklearn

pip install matplotlib

pip install umap-learn

import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler, MinMaxScaler, RobustScaler
from sklearn.manifold import TSNE


import matplotlib.pyplot as plt
from matplotlib import cm
import matplotlib as mpl

import umap
import plotly.express as px
from sklearn import svm
from sklearn.model_selection import train_test_split

spam = pd.read_csv("http://archive.ics.uci.edu/ml/machine-learning-databases/spambase/spambase.data")

X = spam.iloc[:,0: 57].values
y =  spam.iloc[: , -1]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)

from sklearn.neighbors import KNeighborsClassifier

neigh = KNeighborsClassifier(n_neighbors=2)
neigh.fit(X, y)

y_predict= neigh.predict(X_test)

from sklearn import metrics
from sklearn.metrics import f1_score

print(" Accuracy:",metrics.accuracy_score(y_test, y_predict))
print(" Recall:",metrics.recall_score(y_test, y_predict))
print(" Precision:",metrics.precision_score(y_test, y_predict))
f1_score(y_test, y_predict, average='macro')

X = spam.iloc[:,: 57]

tsne = TSNE(n_components=2, random_state=0)
projections = tsne.fit_transform(X_test)

fig = px.scatter(
    projections, x=0, y=1,
    color=y_test, labels={'color': 'spam'}
)
fig.show()

